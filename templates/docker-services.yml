x-app: &app
  restart: unless-stopped
  volumes:
    - "{{ cert_dir }}:/app/certs:ro"
  deploy: &app-deploy
      mode: replicated
      resources:
        limits:
          cpus: "{{ service_cpus }}"
          memory: "{{ service_memory }}"
        reservations:
          cpus: "0.1"
          memory: 128M
  environment: &app-env
    OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
    OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
    ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
    OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
    ASPNETCORE_HTTP_PORTS: 80
    ASPNETCORE_HTTPS_PORTS: 443
    ASPNETCORE_Kestrel__Certificates__Default__Password: ""
    ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/certs/localhost.pfx"
    MessagingUser: {{ messaging.username }}
    MessagingPass: {{ messaging.password }}
    DbUser: {{ db.username }}
    DbPass: {{ db.password }}
    CassandraHost: {{ scylladb.host }}
    CassandraPort: {{ scylladb.port }}
    CassandraUser: {{ scylladb.username }}
    CassandraPass: {{ scylladb.password }}
    ConnectionStrings__cache: {{ ConnectionStrings.cache }}
    ConnectionStrings__messaging: {{ ConnectionStrings.messaging }}
    ConnectionStrings__trace: {{ ConnectionStrings.db }}
    OTEL_EXPORTER_OTLP_ENDPOINT: {{ otlp_endpoint }}
    services__geocoding: "https://nominatim.openstreetmap.org"
    services__routing: "https://valhalla.openstreetmap.de"
    services__service-gateway__http__0: "http://service-gateway:80"
    services__service-gateway__http__1: "https://service-gateway:443"
    services__service-core__http__0: "http://service-core:80"
    services__service-core__http__1: "https://service-core:443"
    services__service-integration__http__0: "http://service-integration:80"
    services__service-integration__http__1: "https://service-integration:443"
    services__service-navigation__http__0: "http://service-navigation:80"
    services__service-navigation__http__1: "https://service-navigation:443"

version: "3.8"

networks:
  default:
    name: {{ stack_network }}
    external: true
  traefik:
    name: {{ proxy_network }}
    external: true

services:
  service-worker:
    <<: *app
    container_name: "service-worker"
    image: "{{ registry }}/trace-service-worker:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: service-worker
    deploy:
      <<: *app-deploy
    ports:
      - target: 443
        published: 10000

  service-core:
    <<: *app
    container_name: "service-core"
    image: "{{ registry }}/trace-service-core:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "service-core"
    deploy:
      <<: *app-deploy
    ports:
      - target: 443
        published: 10001

  service-integration:
    <<: *app
    container_name: "service-integration"
    image: "{{ registry }}/trace-service-integration:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "service-integration"
    deploy:
      <<: *app-deploy
    ports:
      - target: 443
        published: 10002

  service-navigation:
    <<: *app
    container_name: "service-navigation"
    image: "{{ registry }}/trace-service-navigation:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "service-navigation"
    deploy:
      <<: *app-deploy
    ports:
      - target: 443
        published: 10003

  service-gateway:
    <<: *app
    container_name: "service-gateway"
    image: "{{ registry }}/trace-service-gateway:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "service-gateway"
    deploy:
      <<: *app-deploy
    ports:
      - target: 443
        published: 10004

  frontend:
    <<: *app
    container_name: "frontend"
    image: "{{ registry }}/trace-frontend:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "frontend"
    deploy:
      <<: *app-deploy
      labels:
        traefik.enable: "true"
        traefik.http.services.trace.loadbalancer.server.port: 443
        traefik.http.services.trace.loadbalancer.server.scheme: https
        traefik.http.routers.trace.rule: "Host(`{{ demo_domain }}`) || Host(`staging.{{ domain }}`)"
        traefik.http.routers.trace.entrypoints: "{{ traefik_entrypoints }}"
        traefik.http.routers.trace.service: trace
        traefik.http.routers.trace.tls.certresolver: "{{ traefik_certresolver }}"
        traefik.http.routers.trace.tls.domains[0].main: "{{ demo_domain }}"
        traefik.http.routers.trace.tls.domains[0].sans: "*.{{ domain }}"
    ports:
      - target: 443
        published: 10010
      - target: 80
        published: 10015
    networks:
      - default
      - traefik

  website:
    <<: *app
    container_name: "website"
    image: "{{ registry }}/trace-website:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "website"
    deploy:
      <<: *app-deploy
      labels:
        traefik.enable: "true"
        traefik.http.middlewares.preview-redirect.redirectregex.regex: "^https://{{ domain }}/(.*)"
        traefik.http.middlewares.preview-redirect.redirectregex.replacement: "https://{{ website_domain }}/$${1}"
        traefik.http.middlewares.preview-redirect.redirectregex.permanent: "true"
        traefik.http.services.trace-preview.loadbalancer.server.port: 443
        traefik.http.services.trace-preview.loadbalancer.server.scheme: https
        traefik.http.routers.trace-preview.rule: Host(`{{ website_domain }}`)
        traefik.http.routers.trace-preview.entrypoints: "{{ traefik_entrypoints }}"
        traefik.http.routers.trace-preview.service: trace-preview
        traefik.http.routers.trace-preview.tls.certresolver: "{{ traefik_certresolver }}"
        traefik.http.routers.trace-website.rule: Host(`{{ domain }}`) || Host(`www.{{ domain }}`)
        traefik.http.routers.trace-website.entrypoints: "{{ traefik_entrypoints }}"
        traefik.http.routers.trace-website.tls.certresolver: "{{ traefik_certresolver }}"
        traefik.http.routers.trace-website.middlewares: preview-redirect
    ports:
      - target: 443
        published: 10020
      - target: 80
        published: 10025
    networks:
      - default
      - traefik

  manager:
    <<: *app
    container_name: "manager"
    image: "{{ registry }}/trace-manager:{{ version }}"
    environment:
      <<: *app-env
      OTEL_SERVICE_NAME: "manager"
    deploy:
      <<: *app-deploy
      labels:
        traefik.enable: "true"
        traefik.http.services.trace-manager.loadbalancer.server.port: 443
        traefik.http.services.trace-manager.loadbalancer.server.scheme: https
        traefik.http.routers.trace-manager.rule: Host(`{{ manager_domain }}`)
        traefik.http.routers.trace-manager.entrypoints: "{{ traefik_entrypoints }}"
        traefik.http.routers.trace-manager.service: trace-manager
        traefik.http.routers.trace-manager.tls.certresolver: "{{ traefik_certresolver }}"
    ports:
      - target: 443
        published: 10030
      - target: 80
        published: 10035
    networks:
      - default
      - traefik
